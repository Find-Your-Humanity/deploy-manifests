apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-service
  namespace: kubeflow-user-example-com
  labels:
    app: ml-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ml-service
  template:
    metadata:
      labels:
        app: ml-service
    spec:
      nodeSelector:
        node-type: ml-gpu
        topology.cinder.csi.openstack.org/zone: kr-central-2-a
      tolerations:
        - key: "nvidia.com/gpu"
          operator: "Equal"
          value: "present"
          effect: "NoSchedule"
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: ml-service
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - ml-service
                topologyKey: kubernetes.io/hostname
      imagePullSecrets:
        - name: kcr-pull-secret
      containers:
        - name: ml-service
          image: kc-sfacspace.kr-central-2.kcr.dev/team1-repo/ml-service:latest
          ports:
            - containerPort: 8001
          env:
            - name: MODEL_DIR
              value: "/root/models"
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
              nvidia.com/gpu: "1"
            limits:
              memory: "1Gi"
              cpu: "1"
              nvidia.com/gpu: "1"
          livenessProbe:
            httpGet:
              path: /health
              port: 8001
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8001
            initialDelaySeconds: 5
            periodSeconds: 5
          volumeMounts:
            - name: ml-service
              mountPath: /root
      volumes:
        - name: ml-service
          persistentVolumeClaim:
            claimName: ml-service
