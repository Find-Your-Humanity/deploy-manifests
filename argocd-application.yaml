apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
    name: captcha-frontend-app # Argo CD 애플리케이션 이름
    namespace: argocd # Argo CD 컨트롤 플레인이 설치된 네임스페이스
spec:
    project: default # Argo CD 프로젝트 (기본값은 'default')
    source:
        repoURL: https://github.com/Find-Your-Humanity/deploy-manifests.git # <--- !!! 당신의 Kubernetes 매니페스트 리포지토리 URL로 변경 !!!
        targetRevision: HEAD # 감시할 브랜치 (예: main 또는 master)
        path: ./frontend/captcha-widget # <--- !!! 매니페스트 파일들이 있는 리포지토리 내 경로로 변경 !!!
    destination:
        server: https://kubernetes.default.svc # 클러스터 내부 Kubernetes API 서버 주소
        namespace: captcha # <--- !!! 프런트엔드 서비스를 배포할 네임스페이스 (captcha) !!!
    syncPolicy:
        automated: # 자동 동기화 설정
            prune: true # 클러스터에 없는 리소스를 GitOps 리포지토리에 없으면 삭제
            selfHeal: true # 클러스터의 상태가 GitOps 리포지토리와 다르면 자동으로 동기화
            allowEmpty: false # 빈 애플리케이션 동기화 허용 여부
        syncOptions:
            - CreateNamespace=true # 대상 네임스페이스가 없으면 자동으로 생성
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
    name: captcha-api-backend-app # Argo CD 애플리케이션 이름
    namespace: argocd # Argo CD 컨트롤 플레인이 설치된 네임스페이스
spec:
    project: default # Argo CD 프로젝트 (기본값은 'default')
    source:
        repoURL: https://github.com/Find-Your-Humanity/deploy-manifests.git # <--- !!! 당신의 Kubernetes 매니페스트 리포지토리 URL로 변경 !!!
        targetRevision: HEAD # 감시할 브랜치 (예: main 또는 master)
        path: ./backend/captcha-api # <--- !!! 매니페스트 파일들이 있는 리포지토리 내 경로로 변경 !!!
    destination:
        server: https://kubernetes.default.svc # 클러스터 내부 Kubernetes API 서버 주소
        namespace: captcha # <--- !!! 백엔드 서비스를 배포할 네임스페이스 (captcha) !!!
    syncPolicy:
        automated: # 자동 동기화 설정
            prune: true # 클러스터에 없는 리소스를 GitOps 리포지토리에 없으면 삭제
            selfHeal: true # 클러스터의 상태가 GitOps 리포지토리와 다르면 자동으로 동기화
            allowEmpty: false # 빈 애플리케이션 동기화 허용 여부
        syncOptions:
            - CreateNamespace=true # 대상 네임스페이스가 없으면 자동으로 생성
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
    name: ml-service-app # Argo CD 애플리케이션 이름
    namespace: argocd # Argo CD 컨트롤 플레인이 설치된 네임스페이스
spec:
    project: default # Argo CD 프로젝트 (기본값은 'default')
    source:
        repoURL: https://github.com/Find-Your-Humanity/deploy-manifests.git # <--- !!! 당신의 Kubernetes 매니페스트 리포지토리 URL로 변경 !!!
        targetRevision: HEAD # 감시할 브랜치 (예: main 또는 master)
        path: ./ml-service # <--- !!! 매니페스트 파일들이 있는 리포지토리 내 경로로 변경 !!!
    destination:
        server: https://kubernetes.default.svc # 클러스터 내부 Kubernetes API 서버 주소
        namespace: kubeflow-user-example-com # ml-service를 Kubeflow 사용자 네임스페이스로 배포
    syncPolicy:
        automated: # 자동 동기화 설정
            prune: true # 클러스터에 없는 리소스를 GitOps 리포지토리에 없으면 삭제
            selfHeal: true # 클러스터의 상태가 GitOps 리포지토리와 다르면 자동으로 동기화
            allowEmpty: false # 빈 애플리케이션 동기화 허용 여부
        syncOptions:
            - CreateNamespace=true # 대상 네임스페이스가 없으면 자동으로 생성